name: Build and Deploy

on:
  push:
    branches:
      - master  
  pull_request:
    branches:
      - master

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     file: ./Dockerfile
    #     push: true
    #     tags: raplis/rust_ml_service:latest


    - name: Deploy to Kubernetes
      env:
        KUBE_CA: ${{ secrets.KUBE_CA }}
        KUBE_CLIENT_CERT: ${{ secrets.KUBE_CLIENT_CERT }}
        KUBE_CLIENT_KEY: ${{ secrets.KUBE_CLIENT_KEY }}
      run: |
        # Create the .kube directory
        mkdir -p $HOME/.kube
        # Create the kubeconfig file
        echo "apiVersion: v1
        kind: Config
        clusters:
        - cluster:
            certificate-authority-data: $KUBE_CA
            server: https://127.0.0.1:51600
          name: minikube
        contexts:
        - context:
            cluster: minikube
            namespace: default
            user: minikube
          name: minikube
        current-context: minikube
        users:
        - name: minikube
          user:
            client-certificate-data: $KUBE_CLIENT_CERT
            client-key-data: $KUBE_CLIENT_KEY" > $HOME/.kube/config

        # Apply Kubernetes manifests
        kubectl apply -f k8s/

        # Update image in deployment
        kubectl set image deployment/rust-ml-service-deployment rust-ml-service=raplis/rust_ml_service:latest











    # - name: Deploy to EC2
    #   env:
    #     SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    #     HOST: ${{secrets.EC2_PUBLIC_IP}}
    #     USER: ubuntu
    #   run: |
    #     # Install SSH client
    #     sudo apt-get update
    #     sudo apt-get install -y openssh-client

    #     # Start SSH agent
    #     eval "$(ssh-agent -s)"
        
    #     # Add SSH key
    #     ssh-add <(echo "$SSH_KEY")
        
    #     # Disable SSH host key checking
    #     mkdir -p ~/.ssh
    #     echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

    #     # SSH to EC2 instance and pull latest Docker image
    #     ssh $USER@$HOST "docker pull raplis/rust_ml_service:latest && \
    #                         docker stop rust_ml_service_container || true && \
    #                         docker rm rust_ml_service_container || true && \
    #                         docker run -d --name rust_ml_service_container -p 8080:8080 raplis/rust_ml_service:latest"